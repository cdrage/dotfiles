#!/bin/bash

############### 
# EXPORTS
############### 

# The best editor yo
export EDITOR=vim

# HIDPI for GTK apps
export GDK_SCALE=2
export GDK_DPI_SCALE=1
export QT_DEVICE_PIXEL_RATIO=2

# UTF-8
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# History
export HISTSIZE=50000000
export HISTFILESIZE=$HISTSIZE
export HISTCONTROL=ignoredups
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"

# Tmux
[[ $TMUX = "" ]] && export TERM="xterm-256color"

# Go
export GOPATH=$HOME/dropbox/dev/go
export GOBIN=$GOPATH/bin
export PATH=/usr/local/bin:/usr/local/go/bin:$PATH:$GOPATH/bin:/sbin

###################
# ALIASES
###################

alias todo="vim ~/dropbox/txt/todo.txt"
alias agenda="gcalcli agenda 12am 12pm --details description"

# Easier navigation
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# Shortcuts
alias dl="cd ~/Downloads"
alias g="git"
alias h="history"
alias d='docker'
alias ta='tmux attach -t'
alias t='tmux'
alias tl='tmux list-sessions'

# ls stuff
colorflag="--color"
alias l="ls -lF ${colorflag}"
alias la="ls -laF ${colorflag}"
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# Other
alias sudo='sudo '
alias week='date +%V'
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'
alias pubip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"
alias ips="sudo ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"
alias hosts='sudo vim /etc/hosts'
alias untar='tar xvf'
alias battery='upower -i /org/freedesktop/UPower/devices/battery_BAT0'

###################
# FUNCTIONS
###################

twitch() {
  local result=$1
  livestreamer twitch.tv/$1 high
}

stream() {
  local url=$1
  peerflix $1 --vlc
}

digga() {
  dig +nocmd "$1" any +multiline +noall +answer
}

worldtime() {
    timetoconvert='now'
    [ ! -z "" ] && timetoconvert=
    TZS=(
        Asia/Shanghai       # China
        Asia/Kolkata        # All of India
        Europe/Prague       # Prague/Brno
        Europe/Amsterdam    # Amsterdam
        Europe/London       # London
        UTC                
        America/New_York
        America/Chicago
        America/Los_Angeles
    )
    for tz in Asia/Shanghai Asia/Kolkata Europe/Prague Europe/Amsterdam Europe/London UTC America/New_York America/Chicago America/Los_Angeles; do
        string="Mon Nov 16 08:00:00 PST 2015"
        echo -e "Mon Nov 16 08:00:00 PST 2015 \tAmerica/Los_Angeles"
    done
}

# Git shit

git-pull-pr() {
 git fetch upstream pull/$1/head:pull-$1
 git checkout pull-$1
}

git-combine-commit() {
  LAST_COMMIT_MSG=`git show -s --format=%B -1 | cat`
  git add . && git commit -m 'update' && git reset --soft HEAD~2 && git commit -m "$LAST_COMMIT_MSG"
}

git-pr() {
  BRANCH=`git symbolic-ref --short HEAD`
  if [ $? -ne 0 ]; then
        echo "Unable to get branch name, is this even a git repo?"
        exit
  fi
  echo "Branch: " $BRANCH

  ORIGIN_REPO=`git config --get remote.origin.url | sed -e 's/git@github.com://g' | sed -e 's/.git//g'`
  echo "Origin: " $ORIGIN_REPO
  if [ $? -ne 0 ]; then
        echo "Unable to get remote origin url"
        exit
  fi

  UPSTREAM_REPO=`git config --get remote.upstream.url | sed -e 's/git@github.com://g' | sed -e 's/.git//g'`
  echo "Upstream: " $UPSTREAM_REPO
  if [ $? -ne 0 ]; then
        echo "Unable to get upstream origin url.
        Set a remote upstream via:
        'git remote add upstream git@github.com/username/repo.git'"
        exit
  fi

  hub pull-request -b $UPSTREAM_REPO:$1 -h $ORIGIN_REPO:$BRANCH
}

git-push() {
  BRANCH=`git symbolic-ref --short HEAD`
  echo "Branch: " $BRANCH
  if [ $? -ne 0 ]; then
        echo "Unable to get branch name, is this even a git repo?"
  fi
  
  if [[ "$1" == "-f" ]] 
    then git push -f origin $BRANCH 
    else git push origin $BRANCH
  fi
}

#####################
# DOCKER FUNCTIONS
#####################

# removes all stoppped containers && dangling images
dcleanup(){
  docker rm $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
  docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}


relies_on(){
  local containers=$1

  for container in $containers; do
    local state=$(docker inspect --format "{{.State.Running}}" $container 2>/dev/null)

    if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
      echo "$container is not running, starting it for you."
      $container
    fi
  done
}

del_stopped(){
  name=$1
  state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)
  if [[ "$state" == "false" ]]; then
    docker rm $name
  fi
}

mutt(){
  docker run -it --rm \
    -e TERM=xterm-256color \
    -e MUTT \
    -e MUTT_NAME \
    -e MUTT_PASS \
    -e MUTT_FROM \
    -e MUTT_SMTP \
    -e MUTT_IMAP \
    -v $HOME/.gnupg:/home/user/.gnupg \
    -v $HOME/dropbox/etc/aliases.txt:/home/user/.mutt/aliases.txt \
    -v /etc/localtime:/etc/localtime:ro \
    $USER/mutt
}

glances(){
  docker run --rm -it -e TERM=xterm-256color --pid=host --ipc=host --net=host --privileged $USER/glances
}

jrl(){
  docker run -it --rm \
    -v $HOME/dropbox/txt/txt.aes:/root/txt.aes \
    -v /etc/localtime:/etc/localtime:ro \
    $USER/jrl
}

peerflix() {
  magnet=$1
  docker run --rm -it -p 8888:8888 $USER/peerflix $magnet
}

##########
# OTHER
##########


update_docker_machine() {
  RELEASE=0.5.0
  curl -L https://github.com/docker/machine/releases/download/v$RELEASE/docker-machine_linux-amd64.zip >machine.zip && \
  unzip machine.zip && \
  rm machine.zip && \
  sudo mv docker-machine* /usr/local/bin
}

update_docker_compose() {
  RELEASE=1.5.0
  curl -L https://github.com/docker/compose/releases/download/$RELEASE/docker-compose-Linux-x86_64 > docker-compose
  sudo mv docker-compose /usr/local/bin/docker-compose
  sudo chmod +x /usr/local/bin/docker-compose
}

xkcd_password() {
  shuf -n5 /usr/share/dict/words | sed -e ':a;N;$!ba;s/\n/ /g;s/'\''//g;s/\b\(.\)/\u\1/g;s/ //g'
}

